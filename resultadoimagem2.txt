Neuralnetworkarchitecture
model.TIC(train_segmentation_dataset,
validation_data=validation_segmentation_dataset,
epochs=num_epochs,callbacks=callbacks,verbose=0)
#!Restorebestweights.
model.load_weights(best_model_path)
#!Addexplicitsoftmaxlayerbeforeexport.
softmax_layer=Softmax()(model.layers[-1].output)
model=Model(model.input,softmax_layer)
returnmodel
EPOCHS=args.epochsor200
LEARNING_RATE=args.learning_rateor0.001
BATCH_SIZE=args.batch_sizeor32
model=train(num_classes=classes,
learning_rate=LEARNING_RATE,
num_epochs=EPOCHS,
alpha=0.35,
object_weight=100,
train_dataset=train_dataset,
validation_dataset=validation_dataset,
best_model_path=BEST_MODEL_PATH,
input_shape=MODEL_INPUT_SHAPE,
batch_size=BATCH_SIZE,
use_velo=False,
ensure_determinism=ensure_determinism)
disable_per_channel_quantization=False
Starttraining